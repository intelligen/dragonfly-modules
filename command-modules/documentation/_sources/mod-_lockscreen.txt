
Command-module for **screen locking**
=====================================

This module implements a command to lock a computer's screen.
The locking is the same as when the user presses *win-L*.


Configuration examples
----------------------

Configuration "_lockscreen-en.txt"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: python
   :linenos:

   #
   # Dragonfly configuration file for the lock screen command-module.
   #
   # This file is a command-module for Dragonfly.
   # (c) Copyright 2008 by Christo Butcher
   # Licensed under the LGPL, see <http://www.gnu.org/licenses/>
   #
   
   #--- Language section ------------------------------------------------------
   
   # Command to lock the screen; also puts the microphone to sleep.
   # Default: 'lock screen now now'
   
   lang.lock_screen = 'lock screen now now'

Module source code
------------------

The most current version of this module can be downloaded from the `repository here <http://dragonfly-modules.googlecode.com/svn/trunk/command-modules/_lockscreen.py>`_.

.. code-block:: python
   :linenos:

   #
   # This file is a command-module for Dragonfly.
   # (c) Copyright 2008 by Christo Butcher
   # Licensed under the LGPL, see <http://www.gnu.org/licenses/>
   #
   
   """
   Command-module for **screen locking**
   =====================================
   
   This module implements a command to lock a computer's screen.
   The locking is the same as when the user presses *win-L*.
   
   """
   
   
   #---------------------------------------------------------------------------
   
   import ctypes
   import natlink
   
   from dragonfly.all import (Grammar, CompoundRule, Config, Section, Item)
   
   
   #---------------------------------------------------------------------------
   # Set up this module's configuration.
   
   config = Config("lock screen")
   config.lang             = Section("Language section")
   config.lang.lock_screen = Item("lock screen now now",
                                  doc="Command to lock the screen;"
                                      " also puts the microphone to sleep.")
   config.load()
   
   
   #---------------------------------------------------------------------------
   # Lock screen rule.
   
   class LockRule(CompoundRule):
   
       spec = config.lang.lock_screen
   
       def _process_recognition(self, node, extras):
           self._log.debug("%s: locking screen." % self)
   
           # Put the microphone to sleep.
           natlink.setMicState("sleeping")
   
           # Lock screen.
           success = ctypes.windll.user32.LockWorkStation()
           if not success:
               self._log.error("%s: failed to lock screen." % self)
   
   
   #---------------------------------------------------------------------------
   # Create and manage this module's grammar.
   
   grammar = Grammar("lock screen")
   grammar.add_rule(LockRule())
   grammar.load()
   def unload():
       global grammar
       if grammar: grammar.unload()
       grammar = None
